<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jisung.mapper.MemberMapper">

	<resultMap type="com.jisung.domain.MemberVO" id="memberMap">
		<id property="userid" column="userid"/>
		<result property="userpw" column="userpw"/>
		<result property="userName" column="username"/>
		<result property="regDate" column="regdate"/>
		<collection property="authList" resultMap="authMap">
		</collection>		
	</resultMap>
	
	<resultMap type="com.jisung.domain.AuthVO" id="authMap">
		<result property="userid" column="userid"/>
		<result property="auth" column="auth"/>
	</resultMap>
	
    
    <!--left outer join 은 항상 왼쪽 테이블의 내용을 다 반환한 다음에 on의 조건에 따라 오른쪽 테이블과 join하고 오른쪽 테이블에 없는 내용일 경우 null을 반환하고 on 조건에서 필터링한 후에 동일한 결합키가 복수개의 레코드로 존재할 경우 (n-1)  개수씩 레코드가 더 늘어납니다. 그런 다음에 where 절을 통해 필터링한 다음 결과를 반환합니다. -->
	<select id="read" resultMap="memberMap">
		SELECT mem.userid , userpw , username, regdate, auth
		FROM tbl_member mem 
		LEFT OUTER JOIN tbl_member_auth auth 
		ON mem.userid = auth.userid WHERE mem.userid = #{userid}
	</select>
	<!-- 회원 저장 -->
	<insert id="insert">
		insert into tbl_member(userid,userpw,username) values (#{userid},#{userpw},#{userName})
	</insert>
	
	<!-- 회원정보 수정 -->
	<update id="update">
		<choose>
			<!-- 일반회원인 경우 -->
			<when test="userpw != null">
				update tbl_member set userpw = #{userpw} , username = #{userName} where userid = #{userid}			
			</when>
			<!-- 카카오회원인 경우 -->
			<otherwise>
				update tbl_member set username = #{userName} where userid = #{userid}		
			</otherwise>
		</choose>

	</update>
	<!-- 아이디 중복 검사 -->
	<select id="checkId" resultType="int">
		SELECT COUNT(*) FROM tbl_member
		WHERE USERID = #{userid}
	</select>
	<!-- 해당 롤을 가진 회원의 수 -->
	<select id="memberCount" resultType="int">
		select count(*) from tbl_member INNER join tbl_member_auth on tbl_member.userid = tbl_member_auth.userid where auth=#{role}
	</select>
</mapper>